{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.2",
    "title": "Wallet-API"
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [
    { "url": "http://localhost:3000" },
    { "url": "http://localhost:4000" },
    { "url": "https://wallet-back.herokuapp.com" }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Users endpoints"
    },
    {
      "name": "Transactions",
      "description": "Transactions endpoints"
    }
  ],

  "paths": {
    "/api/users/signup": {
      "post": {
        "tags": ["Users"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse201"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response400"
                }
              }
            }
          },
          "400 ": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse400 "
                }
              }
            }
          },
          "409": {
            "description": "Conflic",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse409"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse201"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response400"
                }
              }
            }
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse401"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/logout": {
      "post": {
        "tags": ["Users"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse204"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse401"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "User`s current data",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse200"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse401"
                }
              }
            }
          }
        }
      }
    },
    "/api/transactions": {
      "post": {
        "tags": ["Transactions"],
        "summary": "Create transaction",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Create transaction",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTransactionResponse201"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTransactionResponse400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTransactionResponse401"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Transactions"],
        "summary": "Get all users transactions",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionsResponse200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionsResponse401"
                }
              }
            }
          }
        }
      }
    },
    "/api/transactions/categories": {
      "get": {
        "tags": ["Transactions"],
        "summary": "Get transactions categories",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionsCategoriesResponse200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionsCategoriesResponse401"
                }
              }
            }
          }
        }
      }
    },
    "/api/transactions/period": {
      "post": {
        "tags": ["Transactions"],
        "summary": "Get transactions by period",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Get transactions by period",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetTransactionsByPeriodRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionsResponse200"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTransactionResponse401"
                }
              }
            }
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password", "repeated_password", "name"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "repeated_password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Elon Musk"
          }
        }
      },
      "RegistrationResponse201": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "name": {
              "type": "string",
              "description": "User's name",
              "example": "Elon Musk"
            },
            "token": {
              "type": "string",
              "description": "User's token",
              "example": "bT2HrEdRoQSQO5rD6GvoGGEZHKhZDtA"
            }
          }
        },
        "example": {
          "Status": "201 Created",
          "Content-Type": "application/json",
          "ResponseBody": {
            "message": "New user created",
            "token": "bT2HrEdRoQSQO5rD6GvoGGEZHKhZDtA",
            "user": {
              "name": "Elon Musk",
              "email": "user@example.com"
            }
          }
        }
      },
      "Response400": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "ResponseBody": {
              "message": "Validation error"
            }
          }
        },
        "example": {
          "Status": "400 Bad Request",
          "Content-Type": "application/json",
          "ResponseBody": {
            "message": "Validation error"
          }
        }
      },
      "RegistrationResponse400 ": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "ResponseBody": {
              "message": "Entered passwords do not match"
            }
          }
        },
        "example": {
          "Status": "400 Bad Request",
          "Content-Type": "application/json",
          "ResponseBody": {
            "message": "Entered passwords do not match"
          }
        }
      },
      "RegistrationResponse409": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "ResponseBody": {
              "message": "Email in use"
            }
          }
        },
        "example": {
          "Status": "409 Conflic",
          "Content-Type": "application/json",
          "ResponseBody": {
            "message": "Email in use"
          }
        }
      },

      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse201": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "token": {
              "type": "string",
              "description": "User's token",
              "example": "bT2HrEdRoQSQO5rD6GvoGGEZHKhZDtA"
            },
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email",
              "example": "user@example.com"
            },
            "name": {
              "type": "string",
              "description": "User's name",
              "example": "Elon Musk"
            }
          }
        },
        "example": {
          "Status": "201 OK",
          "Content-Type": "application/json",
          "ResponseBody": {
            "token": "bT2HrEdRoQSQO5rD6GvoGGEZHKhZDtA",
            "user": {
              "name": "Elon Musk",
              "email": "user@example.com"
            }
          }
        }
      },
      "LoginResponse401": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "ResponseBody": {
              "message": "Email or password is wrong"
            }
          }
        },
        "example": {
          "Status": "401 Unauthorized",
          "Content-Type": "application/json",
          "ResponseBody": {
            "message": "Email or password is wrong"
          }
        }
      },
      "LogoutResponse204": {
        "example": {
          "Status": "204 OK"
        }
      },
      "AuthResponse401": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "ResponseBody": {
              "message": "Not authorized"
            }
          }
        },
        "example": {
          "Status": "401 Unauthorized",
          "Content-Type": "application/json",
          "ResponseBody": {
            "message": "Not authorized"
          }
        }
      },
      "CurrentResponse200": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "User's name",
              "example": "Elon Musk"
            },
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "balance": {
              "type": "integr",
              "description": "User's balance"
            }
          }
        },
        "example": {
          "Status": "200 OK",
          "Content-Type": "application/json",
          "ResponseBody": {
            "user": {
              "name": "Elon Musk",
              "email": "user@example.com",
              "balance": 100000
            }
          }
        }
      },
      "GetTransactionsByPeriodRequest": {
        "type": "object",
        "required": ["year"],
        "properties": {
          "year": {
            "type": "number",
            "description": "Transactions period (year)",
            "example": 2021
          },
          "month": {
            "type": "number",
            "description": "Transactions period (month)",
            "example": 9
          }
        }
      },
      "CreateTransactionResponse201": {
        "type": "object",
        "properties": {
          "date": {
            "type": "number",
            "description": "Transaction date (timestamps)"
          },
          "type": {
            "type": "string",
            "description": "Transaction type"
          },
          "category": {
            "type": "string",
            "description": "Transaction category"
          },
          "comment": {
            "type": "string",
            "description": "Transaction destination"
          },
          "amount": {
            "type": "number",
            "description": "Transaction amount"
          },
          "balance": {
            "type": "number",
            "description": "Balance after transaction"
          }
        },
        "example": {
          "Status": "201 Created",
          "Content-Type": "application/json",
          "ResponseBody": {
            "date": "15654421973878",
            "type": "decrement",
            "category": "car",
            "comment": "Топливо",
            "amount": 1500,
            "balance": 1000
          }
        }
      },
      "CreateTransactionResponse400": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "ResponseBody": "'field' is required"
          }
        },
        "example": {
          "Status": "Bad Request",
          "Content-Type": "application/json",
          "ResponseBody": "'field' is required"
        }
      },
      "CreateTransactionResponse401": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "ResponseBody": {
              "message": "Not authorized"
            }
          }
        },
        "example": {
          "Status": "401 Unauthorized",
          "Content-Type": "application/json",
          "ResponseBody": {
            "message": "Not authorized"
          }
        }
      },
      "GetTransactionsResponse200": {
        "type": "object",
        "properties": {
          "ResponseBody": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "date": {
                  "type": "number"
                },
                "type": {
                  "type": "string"
                },
                "category": {
                  "type": "string"
                },
                "comment": {
                  "type": "string"
                },
                "amount": {
                  "type": "number"
                },
                "balance": {
                  "type": "number"
                }
              }
            }
          }
        },
        "example": {
          "Status": "200 OK",
          "Content-Type": "application/json",
          "ResponseBody": [
            {
              "_id": "sa123kjdnjakndjkdsj234",
              "date": 1636960453006,
              "type": "increment",
              "category": "main",
              "comment": "Зарплата",
              "amount": 15000,
              "balance": 15000
            },
            {
              "_id": "456lfglbfkobjsoivwj213",
              "date": 1636960453006,
              "type": "decrement",
              "category": "car",
              "comment": "Топливо",
              "amount": 1500,
              "balance": 13500
            }
          ]
        }
      },
      "GetTransactionsResponse401": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "ResponseBody": {
              "message": "Not authorized"
            }
          }
        },
        "example": {
          "Status": "401 Unauthorized",
          "Content-Type": "application/json",
          "ResponseBody": {
            "message": "Not authorized"
          }
        }
      },

      "GetTransactionsCategoriesResponse200": {
        "type": "object",
        "properties": {
          "ResponseBody": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "main": {
                  "type": "string"
                },
                "food": {
                  "type": "string"
                },
                "car": {
                  "type": "string"
                },
                "evolution": {
                  "type": "string"
                },
                "children": {
                  "type": "string"
                },
                "home": {
                  "type": "string"
                },
                "education": {
                  "type": "string"
                },
                "other": {
                  "type": "string"
                },
                "increment": {
                  "type": "string"
                },
                "decrement": {
                  "type": "string"
                }
              }
            }
          }
        },
        "example": {
          "Status": "200 OK",
          "Content-Type": "application/json",
          "ResponseBody": [
            { "main": "Основной" },
            { "food": "Еда" },
            { "car": "Авто" },
            { "evolution": "Развитие" },
            { "children": "Дети" },
            { "home": "Дом" },
            { "education": "Образование" },
            { "other": "Остальные" },
            { "increment": "Доход" },
            { "decrement": "Расход" }
          ]
        }
      },
      "GetTransactionsCategoriesResponse401": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "ResponseBody": {
              "message": "Not authorized"
            }
          }
        },
        "example": {
          "Status": "401 Unauthorized",
          "Content-Type": "application/json",
          "ResponseBody": {
            "message": "Not authorized"
          }
        }
      },
      "CreateTransactionRequest": {
        "type": "object",
        "required": ["date", "type", "category", "amount", "balance"],
        "properties": {
          "date": {
            "type": "number",
            "description": "Transaction date (timestamps)",
            "example": "15654421973878"
          },
          "type": {
            "type": "string",
            "enum": ["increment", "decrement"],
            "description": "Transaction type",
            "example": "decrement"
          },
          "category": {
            "type": "string",
            "enum": [
              "main",
              "food",
              "car",
              "evolution",
              "children",
              "home",
              "education",
              "other"
            ],
            "description": "Transaction category",
            "example": "car"
          },
          "comment": {
            "type": "string",
            "description": "Transaction destination",
            "example": "Топливо"
          },
          "amount": {
            "type": "number",
            "description": "Transaction amount",
            "example": 1500
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
